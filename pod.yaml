---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: upg-loadme
  namespace: demo
  labels:
    app: upg-loadme
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upg-loadme
  template:
    metadata:
      name: upg-loadme
      labels:
        app: upg-loadme
    spec:
      containers:
        - name: upg-loadme
          # update image id (manual or via jenkins)
          image: '499058147482.dkr.ecr.us-east-1.amazonaws.com/capstone-nish'
          # limiting cpu & mem usage of a pod
          resources:
            requests:
              cpu: 800m
              memory: 400Mi
            limits:
              cpu: 1000m
              memory: 400Mi
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      # add tolerations to restrict running on selected nodes

---
kind: Service
apiVersion: v1
metadata:
  name: upg-loadme
  namespace: demo
spec:
  selector:
    app: upg-loadme
  type: LoadBalancer
  ports:
  - name: app-port
    protocol: TCP
    port: 80
    targetPort: 8081
---
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: upg-loadme-external
  namespace: demo
  annotations: # Reference for complete list of annotations: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: CreatedBy=testUser
    # alb.ingress.kubernetes.io/subnets: subnet-056XXXXXXXXX, subnet-006XXXXXXXXX # mention public subnets only if subnets not tagged for autodiscovery
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
  - http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: upg-loadme
              port:
                number: 80
